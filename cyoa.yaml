openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Choose Your Own Adventure API"
  description: "An API for a Choose Your Own Adventure game."
servers:
  - url: "https://{hostname}"
    variables:
      hostname:
        default: "34.170.108.146"
paths:
  /players:
    post:
      summary: "Create a new player."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        "201":
          description: "Player created successfully."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'

  /players/{playerId}:
    get:
      summary: "Retrieve a player's state by their ID."
      parameters:
        - name: "playerId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Player's state retrieved successfully."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
    patch:
      summary: "Update a player's state by their ID."
      parameters:
        - name: "playerId"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        "200":
          description: "Player's state updated successfully."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'

  /storyElements:
    post:
      summary: "Create a new story element."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoryElement'
      responses:
        "201":
          description: "Story element created successfully."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryElement'

  /storyElements/{nodeId}:
    get:
      summary: "Retrieve a story element by its node ID."
      parameters:
        - name: "nodeId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Story element retrieved successfully."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryElement'
    patch:
      summary: "Update a part of a story element by its node ID."
      parameters:
        - name: "nodeId"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoryElement'
      responses:
        "200":
          description: "Story element updated successfully."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryElement'
    delete:
      summary: "Delete a story element by its node ID."
      parameters:
        - name: "nodeId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "204":
          description: "Story element deleted successfully."

components:
  schemas:
    StoryState:  
      type: "object"
      properties:
        storyID:
          type: "string"
          description: "Unique identifier for the story."
        currentStoryNodeID:
          type: "string"
          description: "Identifier of the current position in the story."
        wisdoms:
          type: "array"
          items:
            $ref: '#/components/schemas/Wisdom'
          description: "Mapping of wisdom IDs to their descriptions."
      required:
        - storyID
        - currentStoryNodeID

    Player:
      type: "object"
      properties:
        _id:
          type: "string"
          description: "The player's unique identifier."
        wixID:
          type: "string"
          format: "uuid"
          description: "Unique Wix identifier for the player."
        email:
          type: "string"
          format: "email"
          description: "Player's email address."
        storyStates:
          type: "array"
          items:
            $ref: '#/components/schemas/StoryState'
      required:
        - wixID
        - email

    StoryElement:
      type: "object"
      properties:
        _id:
          type: "string"
          description: "Unique identifier for the story element."
        storyID:
          type: "string"
          description: "Identifier for the story this element belongs to."
        nodeID:
          type: "string"
          description: "Node identifier for this story element."
        chapterName:
          type: "string"
          description: "Name of the chapter this element is part of."
        artURL:
          type: "string"
          description: "URL to the chapter art."
        videoURL:
          type: "string"
          description: "URL to the chapter video."
        content:
          type: "string"
          description: "Content of the story element."
        choices:
          type: "array"
          items:
            $ref: '#/components/schemas/Choice'
        wisdoms:
          type: "object"
          additionalProperties: 
            $ref: '#/components/schemas/Wisdom'
      required:
        - storyID
        - nodeID
        - content

    Choice:
      type: "object"
      properties:
        description:
          type: "string"
          description: "Description of the choice."
        nextNodeID:
          type: "string"
          description: "Node identifier for the subsequent story element."
        wisdomID:
          type: "string"
          description: "Optional wisdom identifier required for the choice."
        imageUrl:
          type: "string"
          description: "Optional URL to an image for the choice."
      required:
        - description
        - nextNodeID

    Wisdom:
      type: "object"
      properties:
        wisdomID:
          type: "string"
          description: "Unique identifier for the wisdom."
        name:
          type: "string"
          description: "Name of the wisdom."
        description:
          type: "string"
          description: "Description of the wisdom."
      required:
        - wisdomID
        - name
