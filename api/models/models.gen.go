// Package models provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.
package models

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Choice defines model for Choice.
type Choice struct {
	// Description Description of the choice.
	Description string `json:"description" bson:"description"`

	// ImageUrl Optional URL to an image for the choice.
	ImageUrl *string `json:"imageUrl,omitempty" bson:"imageUrl,omitempty"`

	// NextNodeID Node identifier for the subsequent story element.
	NextNodeID string `json:"nextNodeID" bson:"nextNodeID"`

	// WisdomID Optional wisdom identifier required for the choice.
	WisdomID *string `json:"wisdomID,omitempty" bson:"wisdomID,omitempty"`
}

// Player defines model for Player.
type Player struct {
	// Id The player's unique identifier.
	Id *string `json:"_id,omitempty" bson:"_id,omitempty"`

	// Email Player's email address.
	Email openapi_types.Email `json:"email" bson:"email"`

	// StoryStates Player's story states.
	StoryStates *[]StoryState `json:"storyStates,omitempty" bson:"storyStates,omitempty"`

	// WixID Unique Wix identifier for the player.
	WixID openapi_types.UUID `json:"wixID" bson:"wixID"`
}

// StoryElement defines model for StoryElement.
type StoryElement struct {
	// Id Unique identifier for the story element.
	Id *string `json:"_id,omitempty" bson:"_id,omitempty"`

	// ArtURL URL to the chapter art.
	ArtURL *string `json:"artURL,omitempty" bson:"artURL,omitempty"`

	// ChapterName Name of the chapter this element is part of.
	ChapterName *string `json:"chapterName,omitempty" bson:"chapterName,omitempty"`

	// Choices Choices available in this story element.
	Choices *[]Choice `json:"choices,omitempty" bson:"choices,omitempty"`

	// Content Content of the story element.
	Content string `json:"content" bson:"content"`

	// NodeID Node identifier for this story element.
	NodeID string `json:"nodeID" bson:"nodeID"`

	// StoryID Identifier for the story this element belongs to.
	StoryID string `json:"storyID" bson:"storyID"`

	// VideoURL URL to the chapter video.
	VideoURL *string `json:"videoURL,omitempty" bson:"videoURL,omitempty"`

	// Wisdoms Wisdoms associated with this story element.
	Wisdoms *map[string]Wisdom `json:"wisdoms,omitempty" bson:"wisdoms,omitempty"`
}

// StoryState defines model for StoryState.
type StoryState struct {
	// CurrentStoryNodeID Identifier of the current position in the story.
	CurrentStoryNodeID string `json:"currentStoryNodeID" bson:"currentStoryNodeID"`

	// StoryID Unique identifier for the story.
	StoryID string `json:"storyID" bson:"storyID"`

	// Wisdoms Mapping of wisdom IDs to their descriptions.
	Wisdoms *[]Wisdom `json:"wisdoms,omitempty" bson:"wisdoms,omitempty"`
}

// Wisdom defines model for Wisdom.
type Wisdom struct {
	// Description Description of the wisdom.
	Description *string `json:"description,omitempty" bson:"description,omitempty"`

	// Name Name of the wisdom.
	Name string `json:"name" bson:"name"`

	// ArtURL URL to the wisdom art.
	ArtURL *string `json:"artURL,omitempty" bson:"artURL,omitempty"`

	// WisdomID Unique identifier for the wisdom.
	WisdomID string `json:"wisdomID" bson:"wisdomID"`
}

// PostPlayersJSONRequestBody defines body for PostPlayers for application/json ContentType.
type PostPlayersJSONRequestBody = Player

// PatchPlayersPlayerIdJSONRequestBody defines body for PatchPlayersPlayerId for application/json ContentType.
type PatchPlayersPlayerIdJSONRequestBody = Player

// PostStoryElementsJSONRequestBody defines body for PostStoryElements for application/json ContentType.
type PostStoryElementsJSONRequestBody = StoryElement

// PatchStoryElementsNodeIdJSONRequestBody defines body for PatchStoryElementsNodeId for application/json ContentType.
type PatchStoryElementsNodeIdJSONRequestBody = StoryElement
